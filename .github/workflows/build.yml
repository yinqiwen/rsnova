name: Build 

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install nightly
          rustup default nightly
          rustup override set nightly
          rustup target add --toolchain nightly ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          compile_target=${{ matrix.target }}
          chmod +x ./ci/build_linux.sh
          ./ci/build_linux.sh ${{ matrix.target }}


  build-unix:
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: full
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [macos-latest]
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Install GNU tar
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          # echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install nightly
          rustup default nightly
          rustup override set nightly
          rustup target add --toolchain nightly ${{ matrix.target }}

      - name: Build release
        shell: bash
        run: |
          chmod +x ./ci/build_other.sh
          ./ci/build_other.sh ${{ matrix.target }}



  build-windows:
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install nightly
          rustup default nightly
          rustup override set nightly

      - name: Build release
        shell: bash
        run: |
          chmod +x ./ci/build_other.sh
          ./ci/build_other.sh x86_64-pc-windows-msvc

